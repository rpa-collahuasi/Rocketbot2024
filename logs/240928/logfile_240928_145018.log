2024-09-28 14:50:32.639796 - rocketbot - INFO - request: N-DataAriba : line 5 - rpascripts : module  id: b32d0f2b-fe6d-10ef-1563-7db93381a117 -  - {"module_name":"AdvancedExcel","module":"Open","path":"C:/SourcingPlan/Recursos/Ariba/Historico/20240927_09_01_45PM_Export.xls"}
2024-09-28 14:53:23.344675 - rocketbot - INFO - request: N-DataAriba : line 2 - rpaxls : getrows  id: e1326105-cf8f-6cf4-d67e-7fbddc1a73e3 -  - num_filas
2024-09-28 14:53:23.354673 - Rocketbot - ERROR - EXCEPTION IN (<string> Rocketbot, L_172 ""): KeyError: 'default'
2024-09-28 14:58:56.464396 - rocketbot - INFO - request: N-DataAriba : line 2 - rpaxls : readxlsx  id: dd263669-c442-cfec-42b3-bc4409a67509 -  - {"file_path":"C:/SourcingPlan/Recursos/Ariba/Historico/20240927_09_01_45PM_Export.xls"}
2024-09-28 14:58:56.471400 - Rocketbot - ERROR - EXCEPTION IN (<string> Rocketbot, L_115 ""): InvalidFileException: openpyxl does not support the old .xls file format, please use xlrd to read this file, or convert it to the more recent .xlsx file format.
2024-09-28 15:00:16.663840 - rocketbot - INFO - request: N-DataAriba : line 24 - rpaexcel : readxlsx  id: ef6dad42-567b-9e23-992f-31c0fe8ef190 -  - {"file_path":"C:/SourcingPlan/Recursos/Ariba/Historico/20240927_09_01_45PM_Export.xls"}
2024-09-28 15:02:13.117745 - rocketbot - INFO - request: N-DataAriba : line 2 - rpaexcel : getrows  id: c3548455-5800-1e75-57bb-b1d43e35b55e -  - num_filas
2024-09-28 15:32:55.678543 - rocketbot - INFO - request: N-DataAriba : line 1 - rpasystem : setVar  id: 8d738e87-95b7-8a86-1fd5-04d4b6ab3f54 -  - os.path.splitext({ult_descarga_ariba})[0]
2024-09-28 15:32:55.683545 - system - ERROR - EXCEPTION IN (<string> system, L_248 ""): SyntaxError: invalid decimal literal (<string>, line 1)
2024-09-28 15:33:22.282658 - rocketbot - INFO - request: N-DataAriba : line 1 - rpasystem : setVar  id: 8d738e87-95b7-8a86-1fd5-04d4b6ab3f54 -  - os.path.splitext('{ult_descarga_ariba}')[0]
2024-09-28 15:36:30.310013 - rocketbot - INFO - request: N-DataAriba : line 4 - rpaexcel : getcell  id: 24848663-81dd-4ac6-a761-78c397001de5 -  - A6:Q{num_filas}
2024-09-28 15:37:55.500614 - rocketbot - INFO - request: N-DataAriba : line 5 - rpaexcel : quitexcel  id: 6f550769-ae1b-fdac-e6e3-3d07033e4431 -  - 
2024-09-28 15:40:22.246743 - rocketbot - INFO - request: N-DataAriba : line 6 - rpaxls : newxlsx  id: 8cbc6e53-7fcc-fa30-2785-93caa7cc44de -  - {historico_ariba}/{nombre_arch}.xlsx
2024-09-28 15:40:59.205603 - rocketbot - INFO - request: N-DataAriba : line 7 - rpaxls : setcell  id: d90bc1e9-cea7-ffa1-96bb-7009f1d9e43f -  - A1={contenido_xls}
2024-09-28 15:41:28.961440 - rocketbot - INFO - request: N-DataAriba : line 8 - rpaxls : savexlsx  id: bb7ebc1f-b5c3-cea7-76da-c2bf417f72d8 -  - {"path":"{historico_ariba}/{nombre_arch}.xlsx"}
2024-09-28 15:44:50.055961 - rocketbot - INFO - request: N-DataAriba : line 1 - rpascripts : module  id: d2a9cdb1-ede4-fcc0-c9d2-2445f5d82f2b -  - {"module_name":"System++","module":"cleanVars","vars":"ult_descarga_ariba,excel_proce,numero_filas,contenido_excel,contador,registro"}
2024-09-28 15:48:46.638807 - rocketbot - INFO - request: N-DataAriba : line 2 - rpascripts : execscriptpython  id: 7fa72c52-3eb3-9a82-a2fb-2ba8cee7b0fc -  - ########################################################################\n#  Script para obtener el ultimo archivo descargado de Ariba           #\n########################################################################\n\nimport os\n\ncarpeta = GetVar('historico_ariba')\n\nlista_archivos = []\nfor archivo in os.listdir(carpeta):\n    ruta_absoluta = os.path.join(carpeta, archivo)\n    if os.path.isfile(ruta_absoluta):\n        lista_archivos.append(archivo)\n\nif not lista_archivos:\n    print("La carpeta no contiene archivos.")\nelse:\n    archivos_modificados = []\n    for archivo in lista_archivos:\n        ruta_absoluta = os.path.join(carpeta, archivo)\n        fecha_modificacion = os.path.getmtime(ruta_absoluta)\n        archivos_modificados.append((archivo, fecha_modificacion))\n\n    ultimo_archivo_modificado = max(archivos_modificados, key=lambda x: x[1])[0]\n    print("El último archivo modificado en la carpeta es:", ultimo_archivo_modificado)\n    SetVar('ult_descarga_ariba', ultimo_archivo_modificado) 
2024-09-28 15:48:49.616934 - rocketbot - INFO - request: N-DataAriba : line 3 - rpaexcel : readxlsx  id: ef6dad42-567b-9e23-992f-31c0fe8ef190 -  - {"file_path":"{historico_ariba}/{ult_descarga_ariba}"}
2024-09-28 15:49:05.094029 - rocketbot - INFO - request: N-DataAriba : line 4 - rpaexcel : getrows  id: c3548455-5800-1e75-57bb-b1d43e35b55e -  - num_filas
2024-09-28 15:49:07.346879 - rocketbot - INFO - request: N-DataAriba : line 5 - rpaexcel : getcell  id: 24848663-81dd-4ac6-a761-78c397001de5 -  - A6:Q{num_filas}
2024-09-28 15:49:11.113976 - rocketbot - INFO - request: N-DataAriba : line 6 - rpaexcel : quitexcel  id: 6f550769-ae1b-fdac-e6e3-3d07033e4431 -  - 
2024-09-28 15:49:15.133598 - rocketbot - INFO - request: N-DataAriba : line 7 - rpasystem : setVar  id: 8d738e87-95b7-8a86-1fd5-04d4b6ab3f54 -  - os.path.splitext('{ult_descarga_ariba}')[0]
2024-09-28 15:49:18.452019 - rocketbot - INFO - request: N-DataAriba : line 8 - rpaxls : newxlsx  id: 8cbc6e53-7fcc-fa30-2785-93caa7cc44de -  - {historico_ariba}/{nombre_arch}.xlsx
2024-09-28 15:49:21.715218 - rocketbot - INFO - request: N-DataAriba : line 9 - rpaxls : setcell  id: d90bc1e9-cea7-ffa1-96bb-7009f1d9e43f -  - A1={contenido_xls}
2024-09-28 15:49:26.561700 - rocketbot - INFO - request: N-DataAriba : line 10 - rpaxls : savexlsx  id: bb7ebc1f-b5c3-cea7-76da-c2bf417f72d8 -  - {"path":"{historico_ariba}/{nombre_arch}.xlsx"}
2024-09-28 16:04:48.034956 - rocketbot - INFO - request: N-DataAriba : line 14 - rpasystem : setVar  id: 4d85d099-be26-5bc1-c989-443b80faf7fd -  - {historico_ariba}/{nombre_arch}.xlsx
2024-09-28 16:04:48.039957 - system - ERROR - EXCEPTION IN (<string> system, L_248 ""): SyntaxError: invalid decimal literal (<string>, line 1)
2024-09-28 16:05:19.149808 - rocketbot - INFO - request: N-DataAriba : line 14 - rpasystem : setVar  id: 4d85d099-be26-5bc1-c989-443b80faf7fd -  - '{historico_ariba}'/'{nombre_arch}.xlsx'
2024-09-28 16:05:19.153811 - system - ERROR - EXCEPTION IN (<string> system, L_248 ""): TypeError: unsupported operand type(s) for /: 'str' and 'str'
2024-09-28 16:05:42.758828 - rocketbot - INFO - request: N-DataAriba : line 14 - rpasystem : setVar  id: 4d85d099-be26-5bc1-c989-443b80faf7fd -  - '{historico_ariba}/{nombre_arch}.xlsx'
2024-09-28 16:23:16.559500 - rocketbot - INFO - request: N-DataAriba : line 16 - rpascripts : execscriptpython  id: a6d3cc35-3c4c-0729-5df5-fbead88f28dd -  - import pandas as pd\nimport openpyxl\nfrom openpyxl.styles import PatternFill\nimport os\nfrom datetime import datetime\n\nfiltrar = GetVar('xlsx_procesar')\nprint('Archivo a Filtrar:' + filtar\nruta_excel = GetVar('procesado_ariba')\nprint('Ruta Excel: ' + ruta_excel)\nnom_arch_sin = 'Ariba_'\nprint('Archivo Final:' + nom_arch_sin)      \narchivo_excel = ruta_excel + '/' + nom_arch_sin + '.xlsx'\nprint('Archivo Excel: ' + archivo_excel)\n\nnombres_columnas = ["Código Contrato Anterior","Tipo de Proceso","Fecha de ini pro","Código de Contrato","ID de proyecto","Proyecto","Área Contratos","Etapa del Proceso","Estado","ID de tarea","Nombre de tarea","Propietario de la tarea","Estatus","Fecha de inicio","Fecha de vencimiento","Fecha de finalización","Gasto aprobado"]\n\ndf = pd.read_excel(filtrar, header=None, names=nombres_columnas)\n\ndata_filtrada = df[df['Área Contratos'].str.contains('Operaciones', case=False, na=False)]\n\ndata_filtrada.to_excel(archivo_excel, index=False)\n\nworkbook = openpyxl.load_workbook(ruta_excel + '/' + nom_arch_sin + '.xlsx')\n\nhoja = workbook.active\n\nstart_cell = 'A1'\nend_cell = 'R1'\n\nfill = PatternFill(start_color="5DADE2", end_color="5DADE2", fill_type="solid")  # Color de ejemplo (amarillo)\n\nfor row in hoja[start_cell:end_cell]:\n    for cell in row:\n        cell.fill = fill\n\nfecha_actual = datetime.now()\nfecha = fecha_actual.strftime('%Y-%m-%d-%H-%M')\n\nworkbook.save(ruta_excel + '/' + nom_arch_sin + '_' + fecha + '.xlsx')\n\nexcel_proce = ruta_excel + '/' + nom_arch_sin + '_' + fecha + '.xlsx'\n\nprint(excel_proce)\n\nSetVar('excel_proce', excel_proce)
2024-09-28 16:23:16.564952 - script - ERROR - EXCEPTION IN (<string> script, L_90 ""): SyntaxError: '(' was never closed (<string>, line 8)
2024-09-28 16:23:33.656913 - rocketbot - INFO - request: N-DataAriba : line 16 - rpascripts : execscriptpython  id: a6d3cc35-3c4c-0729-5df5-fbead88f28dd -  - import pandas as pd\nimport openpyxl\nfrom openpyxl.styles import PatternFill\nimport os\nfrom datetime import datetime\n\nfiltrar = GetVar('xlsx_procesar')\nprint('Archivo a Filtrar:' + filtar)\nruta_excel = GetVar('procesado_ariba')\nprint('Ruta Excel: ' + ruta_excel)\nnom_arch_sin = 'Ariba_'\nprint('Archivo Final:' + nom_arch_sin)      \narchivo_excel = ruta_excel + '/' + nom_arch_sin + '.xlsx'\nprint('Archivo Excel: ' + archivo_excel)\n\nnombres_columnas = ["Código Contrato Anterior","Tipo de Proceso","Fecha de ini pro","Código de Contrato","ID de proyecto","Proyecto","Área Contratos","Etapa del Proceso","Estado","ID de tarea","Nombre de tarea","Propietario de la tarea","Estatus","Fecha de inicio","Fecha de vencimiento","Fecha de finalización","Gasto aprobado"]\n\ndf = pd.read_excel(filtrar, header=None, names=nombres_columnas)\n\ndata_filtrada = df[df['Área Contratos'].str.contains('Operaciones', case=False, na=False)]\n\ndata_filtrada.to_excel(archivo_excel, index=False)\n\nworkbook = openpyxl.load_workbook(ruta_excel + '/' + nom_arch_sin + '.xlsx')\n\nhoja = workbook.active\n\nstart_cell = 'A1'\nend_cell = 'R1'\n\nfill = PatternFill(start_color="5DADE2", end_color="5DADE2", fill_type="solid")  # Color de ejemplo (amarillo)\n\nfor row in hoja[start_cell:end_cell]:\n    for cell in row:\n        cell.fill = fill\n\nfecha_actual = datetime.now()\nfecha = fecha_actual.strftime('%Y-%m-%d-%H-%M')\n\nworkbook.save(ruta_excel + '/' + nom_arch_sin + '_' + fecha + '.xlsx')\n\nexcel_proce = ruta_excel + '/' + nom_arch_sin + '_' + fecha + '.xlsx'\n\nprint(excel_proce)\n\nSetVar('excel_proce', excel_proce)
2024-09-28 16:23:33.661914 - script - ERROR - EXCEPTION IN (<string> script, L_90 ""): NameError: name 'filtar' is not defined
2024-09-28 16:23:54.374777 - rocketbot - INFO - request: N-DataAriba : line 16 - rpascripts : execscriptpython  id: a6d3cc35-3c4c-0729-5df5-fbead88f28dd -  - import pandas as pd\nimport openpyxl\nfrom openpyxl.styles import PatternFill\nimport os\nfrom datetime import datetime\n\nfiltrar = GetVar('xlsx_procesar')\nprint('Archivo a Filtrar:' + filtrar)\nruta_excel = GetVar('procesado_ariba')\nprint('Ruta Excel: ' + ruta_excel)\nnom_arch_sin = 'Ariba_'\nprint('Archivo Final:' + nom_arch_sin)      \narchivo_excel = ruta_excel + '/' + nom_arch_sin + '.xlsx'\nprint('Archivo Excel: ' + archivo_excel)\n\nnombres_columnas = ["Código Contrato Anterior","Tipo de Proceso","Fecha de ini pro","Código de Contrato","ID de proyecto","Proyecto","Área Contratos","Etapa del Proceso","Estado","ID de tarea","Nombre de tarea","Propietario de la tarea","Estatus","Fecha de inicio","Fecha de vencimiento","Fecha de finalización","Gasto aprobado"]\n\ndf = pd.read_excel(filtrar, header=None, names=nombres_columnas)\n\ndata_filtrada = df[df['Área Contratos'].str.contains('Operaciones', case=False, na=False)]\n\ndata_filtrada.to_excel(archivo_excel, index=False)\n\nworkbook = openpyxl.load_workbook(ruta_excel + '/' + nom_arch_sin + '.xlsx')\n\nhoja = workbook.active\n\nstart_cell = 'A1'\nend_cell = 'R1'\n\nfill = PatternFill(start_color="5DADE2", end_color="5DADE2", fill_type="solid")  # Color de ejemplo (amarillo)\n\nfor row in hoja[start_cell:end_cell]:\n    for cell in row:\n        cell.fill = fill\n\nfecha_actual = datetime.now()\nfecha = fecha_actual.strftime('%Y-%m-%d-%H-%M')\n\nworkbook.save(ruta_excel + '/' + nom_arch_sin + '_' + fecha + '.xlsx')\n\nexcel_proce = ruta_excel + '/' + nom_arch_sin + '_' + fecha + '.xlsx'\n\nprint(excel_proce)\n\nSetVar('excel_proce', excel_proce)
2024-09-28 16:46:55.372488 - rocketbot - INFO - request: N-DataAriba : line 17 - rpascripts : execscriptpython  id: f15ca628-6e3a-dc21-8ec8-a639a299db22 -  - import pandas as pd\nimport openpyxl\nfrom openpyxl.styles import PatternFill\nimport os\nfrom datetime import datetime\n\n# Configuración\nfiltrar = GetVar('xlsx_procesar')\nruta_excel = GetVar('procesado_ariba')\nnom_arch_sin = 'Ariba'\n\nprint('Archivo a Filtrar:', filtrar)\nprint('Ruta Excel:', ruta_excel)\nprint('Archivo Final:', nom_arch_sin)\n\n# Generar nombre de archivo con fecha\nfecha_actual = datetime.now().strftime('%Y-%m-%d-%H-%M')\narchivo_excel_final = os.path.join(ruta_excel, f"{nom_arch_sin}_{fecha_actual}.xlsx")\nprint('Archivo Excel Final:', archivo_excel_final)\n\n# Definir nombres de columnas\nnombres_columnas = ["Código Contrato Anterior", "Tipo de Proceso", "Fecha de ini pro", "Código de Contrato",\n                    "ID de proyecto", "Proyecto", "Área Contratos", "Etapa del Proceso", "Estado", "ID de tarea",\n                    "Nombre de tarea", "Propietario de la tarea", "Estatus", "Fecha de inicio",\n                    "Fecha de vencimiento", "Fecha de finalización", "Gasto aprobado"]\n\n# Leer y filtrar datos\ndf = pd.read_excel(filtrar, header=None, names=nombres_columnas)\ndata_filtrada = df[df['Área Contratos'].str.contains('Operaciones', case=False, na=False)]\n\n# Guardar datos filtrados\ndata_filtrada.to_excel(archivo_excel_final, index=False)\n\n# Aplicar formato\nworkbook = openpyxl.load_workbook(archivo_excel_final)\nhoja = workbook.active\n\n# Aplicar color de fondo a las cabeceras\nfill = PatternFill(start_color="5DADE2", end_color="5DADE2", fill_type="solid")\nfor cell in hoja[1]:\n    cell.fill = fill\n\n# Guardar el archivo final\nworkbook.save(archivo_excel_final)\n\nprint('Archivo procesado y guardado:', archivo_excel_final)\n\n# Establecer variable de salida\nSetVar('excel_proce', archivo_excel_final)\nprint("Variable 'excel_proce' establecida como:", archivo_excel_final)
2024-09-28 16:51:58.521658 - rocketbot - INFO - request: N-DataAriba : line 15 - rpascripts : execscriptpython  id: f15ca628-6e3a-dc21-8ec8-a639a299db22 -  - import pandas as pd\nimport openpyxl\nfrom openpyxl.styles import PatternFill\nimport os\nfrom datetime import datetime\n\n# Configuración\nfiltrar = GetVar('xlsx_procesar')\nruta_excel = GetVar('procesado_ariba')\nnom_arch_sin = 'Sabana_Ariba_Filtrada'\n\nprint('Archivo a Filtrar:', filtrar)\nprint('Ruta Excel:', ruta_excel)\nprint('Archivo Final:', nom_arch_sin)\n\n# Generar nombre de archivo con fecha\nfecha_actual = datetime.now().strftime('%Y-%m-%d-%H-%M')\narchivo_excel_final = os.path.join(ruta_excel, f"{nom_arch_sin}_{fecha_actual}.xlsx")\nprint('Archivo Excel Final:', archivo_excel_final)\n\n# Definir nombres de columnas\nnombres_columnas = ["Código Contrato Anterior", "Tipo de Proceso", "Fecha de ini pro", "Código de Contrato",\n                    "ID de proyecto", "Proyecto", "Área Contratos", "Etapa del Proceso", "Estado", "ID de tarea",\n                    "Nombre de tarea", "Propietario de la tarea", "Estatus", "Fecha de inicio",\n                    "Fecha de vencimiento", "Fecha de finalización", "Gasto aprobado"]\n\n# Leer y filtrar datos\ndf = pd.read_excel(filtrar, header=None, names=nombres_columnas)\ndata_filtrada = df[df['Área Contratos'].str.contains('Operaciones', case=False, na=False)]\n\n# Guardar datos filtrados\ndata_filtrada.to_excel(archivo_excel_final, index=False)\n\n# Aplicar formato\nworkbook = openpyxl.load_workbook(archivo_excel_final)\nhoja = workbook.active\n\n# Aplicar color de fondo a las cabeceras\nfill = PatternFill(start_color="5DADE2", end_color="5DADE2", fill_type="solid")\nfor cell in hoja[1]:\n    cell.fill = fill\n\n# Guardar el archivo final\nworkbook.save(archivo_excel_final)\n\nprint('Archivo procesado y guardado:', archivo_excel_final)\n\n# Establecer variable de salida\nSetVar('excel_proce', archivo_excel_final)\nprint("Variable 'excel_proce' establecida como:", archivo_excel_final)
2024-09-28 16:53:47.144498 - rocketbot - INFO - request: N-DataAriba : line 18 - rpaxls : readxlsx  id: c8c9fb4f-c848-ef46-3cfd-920df3687db7 -  - {"file_path":"{excel_proce}"}
2024-09-28 16:53:47.149499 - Rocketbot - ERROR - EXCEPTION IN (<string> Rocketbot, L_115 ""): InvalidFileException: openpyxl does not support .xlsx"} file format, please check you can open it with Excel first. Supported formats are: .xlsx,.xlsm,.xltx,.xltm
2024-09-28 16:55:58.625631 - rocketbot - INFO - request: N-DataAriba : line 15 - rpascripts : execscriptpython  id: f15ca628-6e3a-dc21-8ec8-a639a299db22 -  - import pandas as pd\nimport openpyxl\nfrom openpyxl.styles import PatternFill\nimport os\nfrom datetime import datetime\n\n# Configuración\nfiltrar = GetVar('xlsx_procesar')\nruta_excel = GetVar('procesado_ariba')\nnom_arch_sin = 'Sabana_Ariba_Filtrada'\n\nprint('Archivo a Filtrar:', filtrar)\nprint('Ruta Excel:', ruta_excel)\nprint('Archivo Final:', nom_arch_sin)\n\n# Generar nombre de archivo con fecha\nfecha_actual = datetime.now().strftime('%Y-%m-%d-%H-%M')\narchivo_excel_final = os.path.join(ruta_excel, f"/{nom_arch_sin}_{fecha_actual}.xlsx")\nprint('Archivo Excel Final:', archivo_excel_final)\n\n# Definir nombres de columnas\nnombres_columnas = ["Código Contrato Anterior", "Tipo de Proceso", "Fecha de ini pro", "Código de Contrato",\n                    "ID de proyecto", "Proyecto", "Área Contratos", "Etapa del Proceso", "Estado", "ID de tarea",\n                    "Nombre de tarea", "Propietario de la tarea", "Estatus", "Fecha de inicio",\n                    "Fecha de vencimiento", "Fecha de finalización", "Gasto aprobado"]\n\n# Leer y filtrar datos\ndf = pd.read_excel(filtrar, header=None, names=nombres_columnas)\ndata_filtrada = df[df['Área Contratos'].str.contains('Operaciones', case=False, na=False)]\n\n# Guardar datos filtrados\ndata_filtrada.to_excel(archivo_excel_final, index=False)\n\n# Aplicar formato\nworkbook = openpyxl.load_workbook(archivo_excel_final)\nhoja = workbook.active\n\n# Aplicar color de fondo a las cabeceras\nfill = PatternFill(start_color="5DADE2", end_color="5DADE2", fill_type="solid")\nfor cell in hoja[1]:\n    cell.fill = fill\n\n# Guardar el archivo final\nworkbook.save(archivo_excel_final)\n\nprint('Archivo procesado y guardado:', archivo_excel_final)\n\n# Establecer variable de salida\nSetVar('excel_proce', archivo_excel_final)\nprint("Variable 'excel_proce' establecida como:", archivo_excel_final)
2024-09-28 16:56:00.181567 - script - ERROR - EXCEPTION IN (<string> script, L_90 ""): PermissionError: [Errno 13] Permission denied: 'C:/Sabana_Ariba_Filtrada_2024-09-28-16-55.xlsx'
2024-09-28 16:56:48.944197 - rocketbot - INFO - request: N-DataAriba : line 15 - rpascripts : execscriptpython  id: f15ca628-6e3a-dc21-8ec8-a639a299db22 -  - import pandas as pd\nimport openpyxl\nfrom openpyxl.styles import PatternFill\nimport os\nfrom datetime import datetime\n\n# Configuración\nfiltrar = GetVar('xlsx_procesar')\nruta_excel = GetVar('procesado_ariba')\nnom_arch_sin = 'Sabana_Ariba_Filtrada'\n\nprint('Archivo a Filtrar:', filtrar)\nprint('Ruta Excel:', ruta_excel)\nprint('Archivo Final:', nom_arch_sin)\n\n# Generar nombre de archivo con fecha\nfecha_actual = datetime.now().strftime('%Y-%m-%d-%H-%M')\narchivo_excel_final = os.path.join(ruta_excel + '/' +, f"{nom_arch_sin}_{fecha_actual}.xlsx")\nprint('Archivo Excel Final:', archivo_excel_final)\n\n# Definir nombres de columnas\nnombres_columnas = ["Código Contrato Anterior", "Tipo de Proceso", "Fecha de ini pro", "Código de Contrato",\n                    "ID de proyecto", "Proyecto", "Área Contratos", "Etapa del Proceso", "Estado", "ID de tarea",\n                    "Nombre de tarea", "Propietario de la tarea", "Estatus", "Fecha de inicio",\n                    "Fecha de vencimiento", "Fecha de finalización", "Gasto aprobado"]\n\n# Leer y filtrar datos\ndf = pd.read_excel(filtrar, header=None, names=nombres_columnas)\ndata_filtrada = df[df['Área Contratos'].str.contains('Operaciones', case=False, na=False)]\n\n# Guardar datos filtrados\ndata_filtrada.to_excel(archivo_excel_final, index=False)\n\n# Aplicar formato\nworkbook = openpyxl.load_workbook(archivo_excel_final)\nhoja = workbook.active\n\n# Aplicar color de fondo a las cabeceras\nfill = PatternFill(start_color="5DADE2", end_color="5DADE2", fill_type="solid")\nfor cell in hoja[1]:\n    cell.fill = fill\n\n# Guardar el archivo final\nworkbook.save(archivo_excel_final)\n\nprint('Archivo procesado y guardado:', archivo_excel_final)\n\n# Establecer variable de salida\nSetVar('excel_proce', archivo_excel_final)\nprint("Variable 'excel_proce' establecida como:", archivo_excel_final)
2024-09-28 16:56:48.955196 - script - ERROR - EXCEPTION IN (<string> script, L_90 ""): SyntaxError: invalid syntax (<string>, line 18)
2024-09-28 16:58:08.403278 - rocketbot - INFO - request: N-DataAriba : line 15 - rpascripts : execscriptpython  id: f15ca628-6e3a-dc21-8ec8-a639a299db22 -  - import pandas as pd\nimport openpyxl\nfrom openpyxl.styles import PatternFill\nimport os\nfrom datetime import datetime\n\n# Configuración\nfiltrar = GetVar('xlsx_procesar')\nruta_excel = GetVar('procesado_ariba')\nnom_arch_sin = 'Sabana_Ariba_Filtrada'\n\nprint('Archivo a Filtrar:', filtrar)\nprint('Ruta Excel:', ruta_excel)\nprint('Archivo Final:', nom_arch_sin)\n\n# Generar nombre de archivo con fecha\nfecha_actual = datetime.now().strftime('%Y-%m-%d-%H-%M')\narchivo_excel_final = os.path.join(ruta_excel, f"{nom_arch_sin}_{fecha_actual}.xlsx")\nprint('Archivo Excel Final:', archivo_excel_final)\n\n# Definir nombres de columnas\nnombres_columnas = ["Código Contrato Anterior", "Tipo de Proceso", "Fecha de ini pro", "Código de Contrato",\n                    "ID de proyecto", "Proyecto", "Área Contratos", "Etapa del Proceso", "Estado", "ID de tarea",\n                    "Nombre de tarea", "Propietario de la tarea", "Estatus", "Fecha de inicio",\n                    "Fecha de vencimiento", "Fecha de finalización", "Gasto aprobado"]\n\n# Leer y filtrar datos\ndf = pd.read_excel(filtrar, header=None, names=nombres_columnas)\ndata_filtrada = df[df['Área Contratos'].str.contains('Operaciones', case=False, na=False)]\n\n# Guardar datos filtrados\ndata_filtrada.to_excel(archivo_excel_final, index=False)\n\n# Aplicar formato\nworkbook = openpyxl.load_workbook(archivo_excel_final)\nhoja = workbook.active\n\n# Aplicar color de fondo a las cabeceras\nfill = PatternFill(start_color="5DADE2", end_color="5DADE2", fill_type="solid")\nfor cell in hoja[1]:\n    cell.fill = fill\n\n# Guardar el archivo final\nworkbook.save(archivo_excel_final)\n\nprint('Archivo procesado y guardado:', archivo_excel_final)\n\n# Establecer variable de salida\nSetVar('excel_proce', archivo_excel_final)\nprint("Variable 'excel_proce' establecida como:", archivo_excel_final)
2024-09-28 17:01:15.771036 - rocketbot - INFO - request: N-DataAriba : line 18 - rpasystem : setVar  id: af700165-e6e2-485d-a54c-e5aeacba4edd -  - '{excel_proce}'.replace('\', '/')
2024-09-28 17:01:15.777726 - system - ERROR - EXCEPTION IN (<string> system, L_248 ""): SyntaxError: unterminated string literal (detected at line 1) (<string>, line 1)
2024-09-28 17:01:39.013752 - rocketbot - INFO - request: N-DataAriba : line 18 - rpasystem : setVar  id: af700165-e6e2-485d-a54c-e5aeacba4edd -  - {excel_proce}.replace('\', '/')
2024-09-28 17:01:39.019753 - system - ERROR - EXCEPTION IN (<string> system, L_248 ""): SyntaxError: invalid syntax (<string>, line 1)
2024-09-28 17:02:12.029332 - rocketbot - INFO - request: N-DataAriba : line 18 - rpasystem : setVar  id: af700165-e6e2-485d-a54c-e5aeacba4edd -  - '{excel_proce}.replace('\', '/')'
2024-09-28 17:02:12.034334 - system - ERROR - EXCEPTION IN (<string> system, L_248 ""): SyntaxError: unexpected character after line continuation character (<string>, line 1)
2024-09-28 17:04:46.113311 - rocketbot - INFO - request: N-DataAriba : line 18 - rpasystem : setVar  id: af700165-e6e2-485d-a54c-e5aeacba4edd -  - "{excel_proce}.replace('\', '/')"
2024-09-28 17:08:38.857362 - rocketbot - INFO - request: N-DataAriba : line 18 - rpasystem : setVar  id: af700165-e6e2-485d-a54c-e5aeacba4edd -  - {excel_proce}.replace('\', '/')
2024-09-28 17:08:38.862357 - system - ERROR - EXCEPTION IN (<string> system, L_248 ""): SyntaxError: invalid syntax (<string>, line 1)
2024-09-28 17:09:04.389043 - rocketbot - INFO - request: N-DataAriba : line 18 - rpasystem : setVar  id: af700165-e6e2-485d-a54c-e5aeacba4edd -  - "{excel_proce}".replace('\', '/')
2024-09-28 17:09:04.395453 - system - ERROR - EXCEPTION IN (<string> system, L_248 ""): SyntaxError: unterminated string literal (detected at line 1) (<string>, line 1)
2024-09-28 17:09:30.524970 - rocketbot - INFO - request: N-DataAriba : line 18 - rpasystem : setVar  id: af700165-e6e2-485d-a54c-e5aeacba4edd -  - "{excel_proce}.replace('\', '/')"
2024-09-28 17:13:14.504237 - rocketbot - INFO - request: N-DataAriba : line 19 - rpascripts : execscriptpython  id: ffba9aa1-dda9-2e8f-dbc4-5331586b850a -  - original = GetVar('excel_proce')\ncambio = original.replace('\','/')\nSetVar('excel_proce', cambio)                          
2024-09-28 17:13:14.510234 - script - ERROR - EXCEPTION IN (<string> script, L_90 ""): SyntaxError: unterminated string literal (detected at line 2) (<string>, line 2)
2024-09-28 17:13:59.973913 - rocketbot - INFO - request: N-DataAriba : line 19 - rpascripts : execscriptpython  id: ffba9aa1-dda9-2e8f-dbc4-5331586b850a -  - original = GetVar('excel_proce')\ncambio = original.replace('\','/')\nSetVar('proce_excel', cambio)                          
2024-09-28 17:13:59.980250 - script - ERROR - EXCEPTION IN (<string> script, L_90 ""): SyntaxError: unterminated string literal (detected at line 2) (<string>, line 2)
2024-09-28 17:39:15.017490 - rocketbot - INFO - request: N-DataAriba : line 18 - rpascripts : execscriptpython  id: ffba9aa1-dda9-2e8f-dbc4-5331586b850a -  - original = GetVar('excel_proce')\ncambio = original.replace('\\','/')\nSetVar('proce_excel', cambio)                          
2024-09-28 17:43:04.927961 - rocketbot - INFO - request: N-DataAriba : line 18 - rpascripts : execscriptpython  id: ffba9aa1-dda9-2e8f-dbc4-5331586b850a -  - original = GetVar('excel_proce')\ncambio = original.replace('\\','/')\nSetVar('excel_proce', cambio)                          
2024-09-28 17:43:25.877761 - rocketbot - INFO - request: N-DataAriba : line 19 - rpaxls : readxlsx  id: c8c9fb4f-c848-ef46-3cfd-920df3687db7 -  - {"file_path":"{excel_proce}"}
2024-09-28 17:43:32.993934 - rocketbot - INFO - request: N-DataAriba : line 20 - rpaxls : getrows  id: 7984266d-374a-4ab8-554c-4da7efa06879 -  - numero_filas
2024-09-28 17:43:38.174883 - rocketbot - INFO - request: N-DataAriba : line 21 - rpaxls : getcell  id: 8609e7c6-f664-6457-97ce-0007f1d60f08 -  - A2:Q{numero_filas}
2024-09-28 17:43:47.904094 - rocketbot - INFO - request: N-DataAriba : line 22 - rpaxls : setcell  id: 6900ec5f-a959-b595-86a5-dfa80d8e8945 -  - R:1=Estado Registro ATOMOX
2024-09-28 17:43:52.799594 - rocketbot - INFO - request: N-DataAriba : line 23 - rpasystem : setVar  id: 5b9f3683-b6b5-8df5-37d6-38496be23f19 -  - 2
